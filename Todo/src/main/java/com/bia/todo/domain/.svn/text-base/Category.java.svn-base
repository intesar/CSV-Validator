/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-sd:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bia.todo.domain;

import com.google.common.base.Objects;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.domain.Persistable;

@Entity
@Cache(usage = NONSTRICT_READ_WRITE)
@Table(name = "category")
@JpaUnique
public class Category implements Persistable<String>, Copyable<Category> {
    private static final long serialVersionUID = 1L;
    @SuppressWarnings("unused")
    private static final Logger log = Logger.getLogger(Category.class);

    // Raw attributes
    private String name; // pk

    // ---------------------------
    // Constructors
    // ---------------------------

    public Category() {
    }

    public Category(String primaryKey) {
        setId(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public String getId() {
        return getName();
    }

    public void setId(String name) {
        setName(name);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isNew() {
        return getId() == null;
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 45)
    @Column(nullable = false, unique = true, length = 45)
    @Id
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Category && hashCode() == other.hashCode());
    }

    private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        return persistableHashBuilder.hash(this);
    }

    /**
     * Construct a readable string representation for this {@link Category} instance.
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("name", getName()) //
                .toString();
    }

    /**
     * Return a copy of the current object
     */
    @Override
    public Category copy() {
        Category category = new Category();
        copyTo(category);
        return category;
    }

    /**
     * Copy the current properties to the given object
     */
    @Override
    public void copyTo(Category category) {
        category.setName(getName());
    }
}