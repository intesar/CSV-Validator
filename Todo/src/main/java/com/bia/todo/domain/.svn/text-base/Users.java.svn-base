/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-sd:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bia.todo.domain;

import java.io.Serializable;


import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.domain.Persistable;

import org.hibernate.annotations.Cache;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;


@Entity
@Cache(usage = NONSTRICT_READ_WRITE)
@Table(name = "users")
public class Users implements Persistable<Integer>, Serializable {

    private static final long serialVersionUID = 1L;
    @SuppressWarnings("unused")
    private static final Logger log = Logger.getLogger(Users.class);
    // Raw attributes
    private Integer id; // pk
    private String email; // not null
    private String accessCode;
    private String name;
    private String gender;
    private String fbId;
    private String fn;
    private String ln;
    private String mi;
    private String fbLink;
    private Integer timezone;
    private String city;
    // Technical attributes for query by example
    private Integer listId;
    // Many to one
    private Lists list; // (listId)

    // ---------------------------
    // Constructors
    // ---------------------------
    public Users() {
    }

    public Users(Integer primaryKey) {
        setId(primaryKey);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isNew() {
        return getId() == null;
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------
    // -- [id] ------------------------
    @Column(nullable = false, unique = true, precision = 10)
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    // -- [email] ------------------------
    @NotEmpty
    @Size(max = 45)
    @Email
    @Column(nullable = false, length = 45)
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Transient
    public String getAccessCode() {
        return accessCode;
    }
    public void setAccessCode(String accessCode) {
        this.accessCode = accessCode;
    }
    
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getFbId() {
        return fbId;
    }

    public void setFbId(String fbId) {
        this.fbId = fbId;
    }

    @Size(max = 500)
    public String getFbLink() {
        return fbLink;
    }

    public void setFbLink(String fbLink) {
        this.fbLink = fbLink;
    }

    public String getFn() {
        return fn;
    }

    public void setFn(String fn) {
        this.fn = fn;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getLn() {
        return ln;
    }

    public void setLn(String ln) {
        this.ln = ln;
    }

    public String getMi() {
        return mi;
    }

    public void setMi(String mi) {
        this.mi = mi;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getTimezone() {
        return timezone;
    }

    public void setTimezone(Integer timezone) {
        this.timezone = timezone;
    }

    // -- [listId] ------------------------
    @Column(name = "list_id", precision = 10, insertable = false, updatable = false)
    public Integer getListId() {
        return listId;
    }

    private void setListId(Integer listId) {
        this.listId = listId;
    }

    // --------------------------------------------------------------------
    // Many to One support
    // --------------------------------------------------------------------
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Users.listId ==> Lists.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    @JoinColumn(name = "list_id")
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public Lists getList() {
        return list;
    }

    /**
     * Set the list without adding this Users instance on the passed list
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by {@link Lists}
     */
    public void setList(Lists list) {
        this.list = list;

        // We set the foreign key property so it can be used by Hibernate search by Example facility.
        if (list != null) {
            setListId(list.getId());
        } else {
            setListId(null);
        }
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Users && hashCode() == other.hashCode());
    }
    //private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 67 * hash + (this.fn != null ? this.fn.hashCode() : 0);
        return hash;
    }

    /**
     * Construct a readable string representation for this {@link Users} instance.
     */
    @Override
    public String toString() {
        return "Users{" + "id=" + id + ", email=" + email + ", name=" + name + ", gender=" + gender + ", fbId=" + fbId + ", fn=" + fn + ", ln=" + ln + ", mi=" + mi + ", fbLink=" + fbLink + ", timezone=" + timezone + ", city=" + city + ", listId=" + listId + ", list=" + list + '}';
    }
}